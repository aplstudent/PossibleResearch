Saturday Jan 30th
-I am going to investigate how to use python to gain access to the semanitc web
-I know that this is semi-structred data with a sql like database managment system. 

-really the name is just a name. I am trying to figure out how to use python to access 
-the semantic web. An area of research here is ontologies. I think it's a way for data 
-to always follow the same pattern. I am not sure what I should be using the data for or which
-data to collect specifically. 
-the semantic web exploits the structure of a web page. each node is a link with edges that 
-connecting them that are the relationship bettwen the nodes. In RBF this follows subject, object ,predicate
-I'm not sure if this is the right direction to go on. THis is applying data mining techniques to the 
-explosion of semantic web data. 
-It might be more beneficial to learn the data mining techniques. Staying within natural language processing 
-this makes me think of sentiment anylasis. The project would be to find reviews and metadata on the reviews 
-then make a table of thier sentiment. A possible research question would be if there is any difference between levels
-of sentiment and medium. A collabrative filtering algorithm could be applied to this. 

--another area that I could explore is machine vision and the self driving car. In my cis 330 class we got an edison board and
--there are many possibilities for what can be done with it. I'm not sure which direction to take the project 

--another area of research is pattern recognition. 

--i am also interested in reinforment learning. It is defined as how software agents act in an enviroment to maximaize reward. --Unlike supervised learning the corret in/out pairs aren't given. There are so many diferent areas of analytics and machin learning i'm not sure which one to dive into. 

-Markov decision process. partly random partly under control. Extension of markov chains, but has actions and rewards. if only one each then it's a chain. I'm liking reinforcment learning. There was a paper called playing atari with reinfocemnt learning
https://www.cs.toronto.edu/~vmnih/docs/dqn.pdf
-My goal might be to create a reinforcment learning library or to recreate the paper. 
-looking at existing open source projects to understand how they are put together. 
-this is where I'll start 
-ill do some tutorials on it
-This slide show gets really mathy with it http://hunch.net/~jl/projects/RL/RLTheoryTutorial.pdf i think i need a book. 
-The main parts of a MDP is the action space, state space, transition probabilites, payoff function, value and pi. 
-THe states are fed to an emultaor , the machine observes a vector of pixel values
-bellman equation, Q-network , deep network
-Arcade Learning Enviroment is the emulator that will be the data. 
 
 --I'm trying to install the python interface for the arcade learning enviroment. I'm having trouble editing the enviroment variable
 --lots of problems
 --more problems 
 --seeing that cmake can't be used and might be the right way to do it. 
 --stopping for now didn't get it to be work.
 
 Jaunary 31st Sunday
Researching how to build a beaowolf cluster and parrallel pyhton and theano code
-lots of python packages
-might be useful to learn the c 
-I'm going to write a good logistic regression function and use it to make predictions on MNIST
-following the totorial but trying to build it on my own from memory
W,b,x, softmax, argmax, p_y_given_x, y_pred, error function, negative log likelihood,errors That's everything in the logistic regression class
-next part is stochastic gradient descent to do the optimization. 
while the number of epochs hasn't been reached and for every minibatch index, so 84 minimatches and 1000 epochs. get the number of batches based on total size and batch size. get the average cost for the minibatch by running the theano function on the minibatch index. every epoch check whether there has been an improvment by comparing against the batch size. check if you still need to train the loop. save the best model. that's the basics of the gradient descent.

--Looking into mpi clustering for python. scipy has a god module called mpi4py. might be the key. 

